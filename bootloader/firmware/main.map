Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               main.o
usbDeviceAddr       0x1               main.o
usbRxToken          0x1               main.o
usbInputBufOffset   0x1               main.o
usbTxLen            0x1               main.o
usbMsgPtr           0x2               main.o
usbRxLen            0x1               main.o
usbNewDeviceAddr    0x1               main.o
usbCurrentTok       0x1               main.o
usbConfiguration    0x1               main.o
usbRxBuf            0x16              main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD crt1.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD main.o
LOAD osccalASM.o
Address of section .text set to 0x1a40
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libattiny84.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000001a40      0x5ae
 *(.vectors)
 .vectors       0x0000000000001a40        0x2 crt1.o
                0x0000000000001a40                __bad_interrupt
                0x0000000000001a40                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000001a42                . = ALIGN (0x2)
                0x0000000000001a42                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000001a42        0x0 linker stubs
 *(.trampolines*)
                0x0000000000001a42                __trampolines_end = .
 *(.progmem*)
 .progmem.data.configurationReply
                0x0000000000001a42        0x6 main.o
                0x0000000000001a42                configurationReply
 .progmem.data.usbDescriptorConfiguration
                0x0000000000001a48       0x12 main.o
                0x0000000000001a48                usbDescriptorConfiguration
 .progmem.data.usbDescriptorDevice
                0x0000000000001a5a       0x12 main.o
                0x0000000000001a5a                usbDescriptorDevice
 .progmem.data.usbDescriptorString0
                0x0000000000001a6c        0x4 main.o
                0x0000000000001a6c                usbDescriptorString0
                0x0000000000001a70                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000001a70                __ctors_start = .
 *(.ctors)
                0x0000000000001a70                __ctors_end = .
                0x0000000000001a70                __dtors_start = .
 *(.dtors)
                0x0000000000001a70                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000001a70        0x0 crt1.o
                0x0000000000001a70                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000001a70        0xc crt1.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000001a7c       0x10 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x0000000000001a7c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000001a8c        0x2 crt1.o
 *(.init9)
 *(.text)
 .text          0x0000000000001a8e        0x0 crt1.o
 .text          0x0000000000001a8e      0x2a0 usbdrv/usbdrvasm.o
                0x0000000000001a8e                usbCrc16
                0x0000000000001acc                usbCrc16Append
                0x0000000000001ad4                __vector_2
 .text          0x0000000000001d2e        0x0 usbdrv/oddebug.o
 .text          0x0000000000001d2e        0x0 main.o
 .text          0x0000000000001d2e        0x0 osccalASM.o
 .text          0x0000000000001d2e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x0000000000001d2e                . = ALIGN (0x2)
 *(.text.*)
 .text.writeWordToPageBuffer
                0x0000000000001d2e       0x1e main.o
 .text.initHardware
                0x0000000000001d4c       0x36 main.o
 .text.startup.main
                0x0000000000001d82      0x26c main.o
                0x0000000000001d82                main
 .text.libgcc.mul
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001fee        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x0000000000001fee                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x0000000000001fee                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000001fee
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 crt1.o
 .data          0x0000000000800060        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800060        0x0 usbdrv/oddebug.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 osccalASM.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x2c
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 crt1.o
 .bss           0x0000000000800060        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800060        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800060        0x0 main.o
 .bss           0x0000000000800060        0x0 osccalASM.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.usbMsgLen
                0x0000000000800060        0x1 main.o
 *(COMMON)
 COMMON         0x0000000000800061       0x2b main.o
                0x0000000000800061                usbTxBuf
                0x000000000080006c                usbDeviceAddr
                0x000000000080006d                usbRxToken
                0x000000000080006e                usbInputBufOffset
                0x000000000080006f                usbTxLen
                0x0000000000800070                usbMsgPtr
                0x0000000000800072                usbRxLen
                0x0000000000800073                usbNewDeviceAddr
                0x0000000000800074                usbCurrentTok
                0x0000000000800075                usbConfiguration
                0x0000000000800076                usbRxBuf
                0x000000000080008c                PROVIDE (__bss_end, .)
                0x0000000000001fee                __data_load_start = LOADADDR (.data)
                0x0000000000001fee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080008c        0x0
                0x000000000080008c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080008c                PROVIDE (__noinit_end, .)
                0x000000000080008c                _end = .
                0x000000000080008c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2130
 *(.stab)
 .stab          0x0000000000000000       0xa8 crt1.o
 .stab          0x00000000000000a8      0xf18 usbdrv/usbdrvasm.o
                                        0xf24 (size before relaxing)
 .stab          0x0000000000000fc0      0x4d4 usbdrv/oddebug.o
                                        0x4e0 (size before relaxing)
 .stab          0x0000000000001494      0xc90 main.o
                                        0xe7c (size before relaxing)
 .stab          0x0000000000002124        0xc osccalASM.o
                                         0x18 (size before relaxing)

.stabstr        0x0000000000000000     0x12a2
 *(.stabstr)
 .stabstr       0x0000000000000000     0x12a2 crt1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv/oddebug.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
